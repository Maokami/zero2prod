name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.8.3
  SQLX_FEATURES: "rustls,postgres"
  APP_USER: app
  APP_USER_PWD: secret
  APP_DB_NAME: newsletter

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install the Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install sqlx-cli
        run: cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked
      - name: Create app user in Postgres
        run: |
          sudo apt-get install postgresql-client

          CREATE_QUERY="CREATE USER ${APP_USER} WITH PASSWORD '${APP_USER_PWD}';"
          PGPASSWORD="password" psql -U "postgres" -h "localhost" -c "${CREATE_QUERY}"

          GRANT_QUERY="ALTER USER ${APP_USER} CREATEDB;"
          PGPASSWORD="password" psql -U "postgres" -h "localhost" -c "${GRANT_QUERY}"

      - name: Migrate database
        run: SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run tests
        run: cargo test

      - name: Check that queries are fresh
        run: cargo sqlx prepare --workspace --check -- --all-targets
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rustfmt
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Run rustfmt
        run: cargo fmt --check || (cargo fmt && git config --global user.email "zerozerozero0216@gmail.com" && git config --global user.name "GitHub Actions" && git diff --quiet || (git commit -am "Auto-format Rust code" && git push))
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Clippy
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run Clippy (Linting)
        run: cargo clippy -- -D warnings
